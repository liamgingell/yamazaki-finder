<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Yamazaki Finder</title>
  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<!-- Leaflet JS -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>
<body>

  <h1>Find your local mecca!</h1>

  <!-- Map Container -->
<div id="map" style="height: 400px; width: 100%;"></div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  let map = L.map("map").setView([35.6895, 139.6917], 12); // Default to Tokyo

  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    attribution: 'Â© OpenStreetMap contributors',
  }).addTo(map);

  // Get user location
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function (position) {
      let userLat = position.coords.latitude;
      let userLng = position.coords.longitude;

      let userMarker = L.marker([userLat, userLng]).addTo(map)
        .bindPopup("You are here").openPopup();

      map.setView([userLat, userLng], 14); // Center map on user location

      // Fetch Daily Yamazaki stores near the user
      fetch(`/find_stores?lat=${userLat}&lng=${userLng}`)
        .then(response => response.json())
        .then(data => {
          let nearestStore = null;
          let nearestDistance = Infinity;

          // Loop through each store and create a marker
          data.forEach(store => {
            if (store.latitude && store.longitude) {
              let storeLatLng = L.latLng(store.latitude, store.longitude);
              let marker = L.marker(storeLatLng).addTo(map)
                .bindPopup(`${store.name} - ${store.address}`);

              // Calculate distance between user and store
              let distance = userMarker.getLatLng().distanceTo(storeLatLng);

              // Check if this store is the nearest one
              if (distance < nearestDistance) {
                nearestDistance = distance;
                nearestStore = storeLatLng;
              }
            }
          });

          // If we found the nearest store, show it on the map
          if (nearestStore) {
            console.log('Nearest Store Location:', nearestStore);

            // Temporary divIcon to check visibility
            let compassMarker = L.marker(nearestStore, {
              icon: L.divIcon({
                className: 'compass-marker',
                html: '<div style="width: 40px; height: 40px; background-color: red;"></div>', // Temporary square div
              }),
            }).addTo(map);
            compassMarker.bindPopup("Nearest Daily Yamazaki");

            // Optional: Add custom image later
            // let compassMarker = L.marker(nearestStore, {
            //   icon: L.divIcon({
            //     className: 'compass-marker',
            //     html: '<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Compass_Rose_English_North.svg/120px-Compass_Rose_English_North.svg.png" style="width: 40px;"/>',
            //   }),
            // }).addTo(map);
            // compassMarker.bindPopup("Nearest Daily Yamazaki");
          } else {
            console.log('No nearest store found!');
          }
        })
        .catch(error => console.error('Error fetching stores:', error));
    });
  }
});
</script>
  </div>

  <!-- Compass Container -->
<div style="text-align: center; margin-top: 20px;">
  <img id="compass" src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Compass_Rose_English_North.svg/120px-Compass_Rose_English_North.svg.png"
       style="width: 120px; transition: transform 0.5s;">
</div>

<script>
  let compassImg = document.getElementById("compass");

  function updateCompass(userLocation, storeLocation) {
    let angle = Math.atan2(
      storeLocation.lng - userLocation.lng,
      storeLocation.lat - userLocation.lat
    );
    let degrees = (angle * (180 / Math.PI)) + 90;
    compassImg.style.transform = `rotate(${degrees}deg)`;
  }

  fetch(`/find_stores?lat=${userLat}&lng=${userLng}`)
    .then(response => response.json())
    .then(data => {
      if (data.length > 0) {
        let nearestStore = data[0];
        updateCompass({ lat: userLat, lng: userLng }, { lat: nearestStore.latitude, lng: nearestStore.longitude });
      }
    });
</script>
  </div>

  <!-- Store List Container -->

</body>
</html>
